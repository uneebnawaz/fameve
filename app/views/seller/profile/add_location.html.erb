<style>
  #map
  { 
    height: 400px;    
    width: 900px;            
  }   
  input[type=radio]
  {
    width: 15px;
    height: 15px;
  }     
</style>
<div class="wrapper d-flex align-items-stretch">
  <%= stylesheet_link_tag 'seller_style' %>
  <%= render partial: 'layouts/seller_header'%>
    <!-- Page Content  -->
  <div id="content" class="p-4 p-md-5">
    <div class="container-fluid">
        <div class="col-4">
          <h2><strong>Add Location</strong></h2>
          <%= hidden_field_tag 'latitude', nil, id: 'latitude' %>
          <%= hidden_field_tag 'longitude', nil, id: 'longitude' %>
          <%= text_field_tag 'pac-input', nil, class: 'form-control', placeholder: 'Search your location', style: 'margin-bottom: 5px' %>
          <div id="map" style="margin-bottom: 10px"></div>
          <button type="button" class= "btn btn-dark" onclick="muSubFun();">Submit</button>
          <button type="button" class="btn btn-primary" onclick="findMyLocation();">Find My Location</button>
        </div>
    </div>
  </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
  function initAutocomplete() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: { lat: 30.3753, lng: 69.3451 },
      zoom: 5
    });
    var options = { componentRestrictions: { country: 'pk' } };
    var input = document.getElementById('pac-input');
    var autocomplete = new google.maps.places.Autocomplete(input, options);
    autocomplete.bindTo('bounds', map);
    var infowindow = new google.maps.InfoWindow();
    var marker = new google.maps.Marker({ draggable: true, map: map });

    autocomplete.addListener('place_changed', function() {
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        window.alert("Autocomplete's returned place contains no geometry");
        return;
      }

      document.getElementById('latitude').value = place.geometry.location.lat();
      document.getElementById('longitude').value = place.geometry.location.lng();
      infowindow.close();
      marker.setVisible(false);

      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);
      }

      marker.setPosition(place.geometry.location);
      marker.setVisible(true);
      var address = place.formatted_address || '';
      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
      infowindow.open(map, marker);
    });

    marker.addListener('dragend', function() {
      var markerPosition = marker.getPosition();
      var geocoder = new google.maps.Geocoder();

      geocoder.geocode({ 'latLng': markerPosition }, function(results, status) {
        if (status === google.maps.GeocoderStatus.OK) {
          if (results[0]) {
            document.getElementById('pac-input').value = results[0].formatted_address;
            document.getElementById('latitude').value = markerPosition.lat();
            document.getElementById('longitude').value = markerPosition.lng();
          } else {
            console.error('No results found');
          }
        } else {
          console.error('Geocoder failed due to: ' + status);
        }
      });
    });
  }

  function findMyLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var latitude = position.coords.latitude;
      var longitude = position.coords.longitude;

      document.getElementById('latitude').value = latitude;
      document.getElementById('longitude').value = longitude;

      var map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: latitude, lng: longitude },
        zoom: 17
      });
      var marker = new google.maps.Marker({
        position: { lat: latitude, lng: longitude },
        map: map,
        draggable: true
      });

      var geocoder = new google.maps.Geocoder();
      var latlng = new google.maps.LatLng(latitude, longitude);
      geocoder.geocode({ 'latLng': latlng }, function(results, status) {
        if (status === google.maps.GeocoderStatus.OK) {
          if (results[0]) {
            document.getElementById('pac-input').value = results[0].formatted_address;
          } else {
            console.error('No results found');
          }
        } else {
          console.error('Geocoder failed due to: ' + status);
        }
      });

      // Update the input box and hidden fields when the marker position changes
      marker.addListener('dragend', function() {
        var markerPosition = marker.getPosition();
        var geocoder = new google.maps.Geocoder();

        geocoder.geocode({ 'latLng': markerPosition }, function(results, status) {
          if (status === google.maps.GeocoderStatus.OK) {
            if (results[0]) {
              document.getElementById('pac-input').value = results[0].formatted_address;
              document.getElementById('latitude').value = markerPosition.lat();
              document.getElementById('longitude').value = markerPosition.lng();
            } else {
              console.error('No results found');
            }
          } else {
            console.error('Geocoder failed due to: ' + status);
          }
        });
      });
    }, function(error) {
      console.error(error);
      alert('Error: ' + error.message);
    });
  } else {
    alert('Geolocation is not supported by this browser.');
  }
  }

  function muSubFun() {
  var latitude = document.getElementById('latitude').value;
  var longitude = document.getElementById('longitude').value;
  var input = document.getElementById('pac-input').value;
  var csrf_token = $('meta[name="csrf-token"]').attr('content');

  $.ajax({
    url: '/seller/update_location',
    method: 'PATCH',
    data: {
      latitude: latitude,
      longitude: longitude,
      input: input
    },
    beforeSend: function(xhr) {
      xhr.setRequestHeader('X-CSRF-Token', csrf_token); 
    },
    success: function(result) {
      alert('Location updated successfully.');
      // You can perform additional actions here, such as displaying a success message
      // or refreshing the page to reflect the updated location.
    },
    error: function(xhr, status, error) {
      console.error(xhr.responseText);
    }
  });
}

  document.addEventListener('DOMContentLoaded', function() {
    initAutocomplete();
  });
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBjWPmgbm84PzHtJugodpVKN74n1CuRFAA&libraries=places&callback=initAutocomplete"
async defer></script>

